# Multi-stage Docker build for AI Mechanic

# Stage 1: Build React frontend
FROM node:18-alpine as frontend-build
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production
COPY src/ ./src/
COPY public/ ./public/
RUN npm run build

# Stage 2: Python backend with React build
FROM python:3.9-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Upgrade pip and install build tools first
RUN pip install --upgrade pip setuptools wheel

# Copy fully pinned requirements (generated by pip-tools) and install
# This eliminates dependency resolution time during Docker builds
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy Python application files
COPY *.py ./
COPY chunks_with_embeddings.json ./

# Copy React build from previous stage
COPY --from=frontend-build /app/build ./build

# Create startup script
RUN echo '#!/bin/bash\n\
python3 api_server.py &\n\
python3 -m http.server 3000 --directory build &\n\
wait' > start.sh && chmod +x start.sh

# Expose ports
EXPOSE 8000 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start the application
CMD ["./start.sh"]